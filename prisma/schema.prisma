generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  user_id            String               @id @default(uuid())
  fullname           String               @db.VarChar(100)
  username           String               @unique @db.VarChar(100)
  email              String               @unique
  password           String
  gender             Gender
  avatar             String?
  bio                String?
  isActive           Boolean              @default(true)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  passwordResetToken passwordResetToken[]
  members            member[]
  project_owners     project[]
  tasks              task[]

  @@index([username, email])
}

model passwordResetToken {
  id      String @id @default(uuid())
  token   String @unique
  user_id String
  user    user   @relation(fields: [user_id], references: [user_id])

  expiresAt DateTime
  createdAt DateTime @default(now())
}

model task {
  task_id     String        @id @default(uuid())
  title       String        @db.VarChar(100)
  description String?
  status      TaskStatus    @default(TO_DO)
  priority    TaskPriority? @default(NORMAL)

  project    project @relation(fields: [project_id], references: [project_id])
  assignedTo user?   @relation(fields: [user_id], references: [user_id])
  project_id String
  user_id    String?

  member    member? @relation(fields: [member_id], references: [member_id])
  member_id String?

  dueDate     DateTime?
  completedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model project {
  project_id  String   @id @default(uuid())
  name        String
  description String?
  isActive    Boolean  @default(true)
  members     member[]

  owner    user   @relation(fields: [owner_id], references: [user_id])
  owner_id String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tasks     task[]
}

model member {
  member_id String @id @default(uuid())
  role      String

  user       user     @relation(fields: [user_id], references: [user_id])
  project    project? @relation(fields: [project_id], references: [project_id])
  user_id    String
  project_id String?

  task      task[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Gender {
  MALE
  FEMALE
}

enum TaskStatus {
  TO_DO
  IN_PROGRESS
  COMPLETED
}

enum TaskPriority {
  NORMAL
  HIGH
  MEDIUM
  LOW
}
